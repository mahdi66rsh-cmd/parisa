name: Android CI (with tun2socks + xray)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      # ---------- build tun2socks (android/arm64) ----------
      - name: Build tun2socks for android/arm64
        shell: bash
        run: |
          set -eux
          mkdir -p build/bin
          git clone --depth=1 https://github.com/xjasonlyu/tun2socks.git tun2socks
          cd tun2socks
          export GOOS=android GOARCH=arm64 CGO_ENABLED=0 GO111MODULE=on
          go build -trimpath -ldflags="-s -w" -o ../build/bin/tun2socks ./cmd/tun2socks

      # ---------- build xray-core (android/arm64) ----------
      - name: Build Xray-core for android/arm64
        shell: bash
        run: |
          set -eux
          cd $GITHUB_WORKSPACE
          git clone --depth=1 https://github.com/XTLS/Xray-core.git xray-core
          cd xray-core
          export GOOS=android GOARCH=arm64 CGO_ENABLED=0 GO111MODULE=on
          # باینری xray
          go build -trimpath -ldflags="-s -w" -o ../build/bin/xray ./main

      # ---------- copy binaries into app assets ----------
      - name: Place binaries into app assets
        shell: bash
        run: |
          set -eux
          mkdir -p app/src/main/assets/bin
          cp -f build/bin/tun2socks app/src/main/assets/bin/
          cp -f build/bin/xray       app/src/main/assets/bin/
          ls -al app/src/main/assets/bin

      # اگر gradlew داری، مجوز اجرایی بده (بی‌ضرر است)
      - name: Grant execute permission for gradlew
        if: hash('bash') && (exists('gradlew') || exists('./gradlew'))
        run: chmod +x ./gradlew

      # ---------- build APK ----------
      - name: Build Debug APK
        shell: bash
        run: |
          set -eux
          if [ -f "./gradlew" ]; then
            ./gradlew :app:assembleDebug
          else
            # اگر wrapper نیست، از Gradle نصب‌شده روی runner استفاده کن
            gradle :app:assembleDebug
          fi

      - name: Show APK path(s)
        shell: bash
        run: |
          echo "APK files found:"
          find app/build/outputs -type f -name "*.apk" -print

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/**/*.apk
