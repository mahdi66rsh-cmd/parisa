name: Build Android VPN (Java)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      # --- Build tun2socks (مسیر صحیح cmd/tun2socks) ---
      - name: Build tun2socks for android/arm64
        shell: bash
        run: |
          set -eux
          mkdir -p build/bin third_party
          git clone --depth=1 https://github.com/xjasonlyu/tun2socks.git third_party/tun2socks
          pushd third_party/tun2socks
          export GOOS=android GOARCH=arm64 CGO_ENABLED=0 GO111MODULE=on
          go build -trimpath -ldflags="-s -w" -o ../../build/bin/tun2socks ./cmd/tun2socks
          popd

      # --- Build Xray-core ---
      - name: Build Xray-core for android/arm64
        shell: bash
        run: |
          set -eux
          mkdir -p build/bin third_party
          git clone --depth=1 https://github.com/XTLS/Xray-core.git third_party/xray
          pushd third_party/xray
          export CGO_ENABLED=0 GOOS=android GOARCH=arm64
          go build -trimpath -ldflags="-s -w" -o ../../build/bin/xray ./main
          popd

      # --- کپی باینری‌ها به assets ---
      - name: Place binaries into app assets
        shell: bash
        run: |
          set -eux
          mkdir -p app/src/main/assets/bin
          cp -f build/bin/tun2socks app/src/main/assets/bin/
          cp -f build/bin/xray app/src/main/assets/bin/
          chmod +x app/src/main/assets/bin/*

      # --- Android SDK ---
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # --- Gradle (بدون gradlew) ---
      - name: Set up Gradle 8.7
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.7'

      # --- Build APK ---
      - name: Build Debug APK
        working-directory: app
        run: |
          gradle --no-daemon assembleDebug

      - name: Show APK path(s)
        shell: bash
        run: |
          ls -lah app/build/outputs/apk || true
          find app/build/outputs -name "*.apk" -print

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/**/*.apk
          compression-level: 0
